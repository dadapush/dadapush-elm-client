{-
   DaDaPush Public API
   DaDaPush: Real-time Notifications App Send real-time notifications through our API without coding and maintaining your own app for iOS or Android devices.

   The version of the OpenAPI document: v1
   Contact: contacts@dadapush.com

   NOTE: This file is auto generated by the openapi-generator.
   https://github.com/openapitools/openapi-generator.git
   Do not edit this file manually.
-}


module Data.ResultOfMessagePushResponse exposing (ResultOfMessagePushResponse, decoder, encode)

import Data.MessagePushResponse as MessagePushResponse exposing (MessagePushResponse)
import Dict exposing (Dict)
import Json.Decode as Decode exposing (Decoder)
import Json.Decode.Pipeline exposing (optional, required)
import Json.Encode as Encode


type alias ResultOfMessagePushResponse =
    { code : Int
    , data : Maybe (MessagePushResponse)
    , errmsg : String
    }


decoder : Decoder ResultOfMessagePushResponse
decoder =
    Decode.succeed ResultOfMessagePushResponse
        |> required "code" Decode.int
        |> optional "data" (Decode.nullable MessagePushResponse.decoder) Nothing
        |> required "errmsg" Decode.string



encode : ResultOfMessagePushResponse -> Encode.Value
encode model =
    Encode.object
        [ ( "code", Encode.int model.code )
        , ( "data", Maybe.withDefault Encode.null (Maybe.map MessagePushResponse.encode model.data) )
        , ( "errmsg", Encode.string model.errmsg )

        ]


